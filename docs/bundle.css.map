{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\dev\\App.svelte",
    "..\\src\\DatePicker.svelte",
    "..\\src\\Switcher.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import DatePicker  from \"../src/index.js\";\r\n\r\n\r\n  let date = new Date();\r\n  $: _date = date.toLocaleDateString(\"en-US\");\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n  /* :root{\r\n    --svtd-bar-color: #0522f3;\r\n    --svtd-button-color: white;\r\n    --svtd-button-bg-color: #2466fb;\r\n    --svtd-border: none;\r\n    --svtd-button-box-shadow:0 1px 10px -2px #2466fb;\r\n  }   */\r\n\r\n \r\n  .container{\r\n    height: 100%;\r\n    width: 100%;\r\n    \r\n  }\r\n\r\n  .center {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    font: 20px 'Roboto', sans-serif;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" >\r\n  <div class=\"center\">\r\n    <p>Date: {_date}</p>\r\n    <DatePicker bind:date />\r\n  </div>\r\n</div>\r\n\r\n",
    "<script>\r\n  import Switcher from './Switcher.svelte';\r\n\r\n  export let date = new Date();\r\n  export let visible = false;\r\n  export let years_map = [1900, 2100];\r\n  export let classes = '';\r\n\r\n  let years_count = ((years_map[1] - years_map[0]) + 1);\r\n\r\n  const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\r\n  const YEARS = new Array(years_count).fill(years_map[0]).map((v, i) => v + i);\r\n  const WEEKDAY = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n  let _date;\r\n  $: DAYS = new Array( new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate() ).fill(1).map((v, i) => v + i);\r\n  $:  _date = date.toLocaleDateString(\"en-US\");\r\n \r\n\r\n\r\n\r\n  let resetDate = (event) => {\r\n    event.stopPropagation()\r\n    date = new Date();\r\n  }\r\n\r\n  let dateChanged = (event) => {\r\n\r\n    let {type, changedData} = event.detail;\r\n    let newDate = new Date();\r\n\r\n    if (type === 'day') {\r\n      newDate = new Date(date.getFullYear(), date.getMonth(), changedData + 1)\r\n    } else if (type === 'month') {\r\n      let maxDayInSelectedMonth = new Date(date.getFullYear(), changedData + 1, 0).getDate()\r\n      let day = Math.min(date.getDate(), maxDayInSelectedMonth)\r\n      newDate = new Date(date.getFullYear(), changedData, day)\r\n    } else if (type === 'year') {\r\n      let maxDayInSelectedMonth = new Date(years_map[1] + changedData, date.getMonth() + 1, 0).getDate()\r\n      let day = Math.min(date.getDate(), maxDayInSelectedMonth)\r\n      newDate = new Date(1900 + changedData, date.getMonth(), day)\r\n\r\n    }\r\n\r\n    date = newDate;\r\n  }\r\n</script>\r\n\r\n<style>\r\n.touch-date-popup{\r\n  z-index: 1;\r\n  position: fixed;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  touch-action: pan-down;\r\n}\r\n.touch-date-popup > div{\r\n  background: var(--svtd-popup-bg-color, white);\r\n  color: var(--svtd-popup-color, black);\r\n  margin-top: 30vh;\r\n  width: 85%;\r\n  margin-left: 7%;\r\n  border-radius: var(--svtd-popup-radius, 10px);\r\n}\r\n.touch-date-wrapper{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-size: var(--svtd-font-size, 20px);\r\n  padding: 1.5rem;\r\n}\r\n\r\n.touch-date-picker {\r\n  display: flex;\r\n  padding: 50px 20px;\r\n  margin: 10px 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.touch-date-reset > button {\r\n  width: 100px;\r\n  height: 30px;\r\n  border-radius: 15px;\r\n  border: var(--svtd-border, 1px solid grey);\r\n  outline: none;\r\n  color: var(--svtd-button-color, black);\r\n  background-color: var(--svtd-button-bg-color, transparent);\r\n  box-shadow: var(--svtd-button-box-shadow, none) ;\r\n  font-weight: 300;\r\n}\r\n.touch-date-reset button:nth-child(1):active {\r\n  -webkit-transform: scale(0.95);\r\n          transform: scale(0.95);\r\n}\r\n\r\n.date-line {\r\n  font-size: 30px;\r\n  font-weight: 300;\r\n}\r\n.day-line{\r\n  margin: 2px;\r\n}\r\n  \r\n</style>\r\n\r\n<input type=\"text\" class='{classes}' readonly value={_date} on:focus={() => {visible = !visible}}>\r\n{#if visible}\r\n  <div class=\"touch-date-popup\" >\r\n    <div>\r\n      <div class=\"touch-date-wrapper\">\r\n        <div class='date-line'>{ date.getDate() } { MONTHS[date.getMonth()] } { date.getFullYear() }</div>\r\n        <p class='day-line'>{ WEEKDAY[date.getDay()] }</p>\r\n        <div class='touch-date-picker'>\r\n          <Switcher type='day' data={DAYS} selected={date.getDate()} on:dateChange={dateChanged} }/>\r\n          <Switcher type='month' data={MONTHS} selected={date.getMonth() + 1} on:dateChange={dateChanged}/>\r\n          <Switcher type='year' data={YEARS} selected={date.getYear() + 1} on:dateChange={dateChanged}/>\r\n        </div>\r\n        <div class='touch-date-reset'>\r\n          <button on:click={resetDate}>Reset</button>\r\n          <button on:click={() => {visible = !visible}}>Ok</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n",
    "<script>\r\n\r\n  import { afterUpdate, onMount, createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let selected;\r\n  export let data = 0;\r\n  export let type;\r\n\r\n  let position = selected ? -(selected - 1) * 50 : 0;\r\n  let offset = 0;\r\n  let dragging = false;\r\n\r\n  let itemWrapper, previousY;\r\n\r\n\r\n  onMount(() => {\r\n   setPosition()\r\n  });\r\n\r\n  afterUpdate(() => {\r\n\t\tlet selectedPosition = -(selected - 1) * 50\r\n\r\n    if (!dragging && position !== selectedPosition) {\r\n        position = selectedPosition\r\n        setPosition()\r\n    }\r\n  });\r\n\r\n\r\n  function onDateChange(type, changedData) {\r\n\t\tdispatch('dateChange', {\r\n\t\t\ttype, changedData\r\n\t\t});\r\n  }\r\n\r\n  function setPosition(){\r\n     let itemPosition = `\r\n      will-change: 'transform';\r\n      transition: transform ${Math.abs(offset) / 100 + 0.1}s;\r\n      transform: translateY(${position}px)\r\n    `;\r\n    itemWrapper.style.cssText = itemPosition;\r\n  }\r\n\r\n  let onMouseDown = (event) => {\r\n    previousY = event.touches ? event.touches[0].clientY : event.clientY;\r\n    dragging = true;\r\n\r\n    window.addEventListener('mousemove', onMouseMove)\r\n    window.addEventListener('mouseup', onMouseUp)\r\n    window.addEventListener('touchmove', onMouseMove)\r\n    window.addEventListener('touchend', onMouseUp)\r\n  }\r\n\r\n   let onMouseMove = (event) => {\r\n    let clientY = event.touches ? event.touches[0].clientY : event.clientY;\r\n    offset = clientY - previousY;\r\n\r\n    let maxPosition = -data.length * 50;\r\n    let _position = position + offset;\r\n    position = Math.max(maxPosition, Math.min(50, _position))\r\n    previousY = event.touches ? event.touches[0].clientY : event.clientY;\r\n    setPosition();\r\n  }\r\n\r\n  let onMouseUp = () => {\r\n    let maxPosition = -(data.length - 1) * 50;\r\n    let rounderPosition = Math.round((position + offset * 5) / 50) * 50;\r\n    let finalPosition = Math.max(maxPosition, Math.min(0, rounderPosition));\r\n\r\n    dragging = false;\r\n    position = finalPosition;\r\n\r\n    window.removeEventListener('mousemove', onMouseMove)\r\n    window.removeEventListener('mouseup', onMouseUp)\r\n    window.removeEventListener('touchmove', onMouseMove)\r\n    window.removeEventListener('touchend', onMouseUp);\r\n\r\n    setPosition();\r\n    onDateChange(type, -finalPosition / 50);\r\n  }\r\n\r\n  let onWheel = (e) => {\r\n    if (event.deltaY < 0)\r\n      {\r\n        position = position - 50\r\n      }\r\n      if (event.deltaY > 0)\r\n      {\r\n        position = position + 50\r\n      }\r\n    onMouseUp()\r\n  }\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n .touch-date-wrapper {\r\n  position: relative;\r\n  height: 50px;\r\n  margin: 0 10px;\r\n  border-top: 1px solid var(--svtd-bar-color, grey);\r\n  border-bottom: 1px solid var(--svtd-bar-color, grey);\r\n  border-radius: 0;\r\n}\r\n.touch-date-container {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.touch-date-wrapper:before,\r\n.touch-date-wrapper:after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  width: 80px;\r\n  height: 50px;\r\n  background-color: #fff;\r\n  opacity: 0.8;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n}\r\n\r\n.touch-date-wrapper:before {\r\n  top: -51px;\r\n}\r\n\r\n.touch-date-wrapper:after {\r\n  bottom: -51px;\r\n}\r\n\r\n.touch-date-container li {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 50px;\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n}\r\n</style>\r\n\r\n\r\n<div class='touch-date-wrapper' on:mousedown={onMouseDown} on:touchstart={onMouseDown} on:wheel={onWheel}>\r\n  <ul bind:this={itemWrapper} class=\"touch-date-container\">\r\n   {#each data as item }\r\n     <li>{item}</li>\r\n   {/each}\r\n  </ul>\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}